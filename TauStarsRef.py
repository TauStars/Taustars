import asyncio
from aiogram import Bot, Dispatcher, types, F
from aiogram.types import Message, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.filters import Command, CommandStart

# ü§ñ –ë–æ—Ç—Ç—ã“£ —Ç–æ–∫–µ–Ω—ñ –º–µ–Ω –∞–¥–º–∏–Ω ID
TOKEN = "8041043215:AAGYMVMwUTT_jVL5RJkHaCLkTRSudL-_Hwk"
ADMIN_ID = 6221618701

bot = Bot(token=TOKEN)
dp = Dispatcher()

# üì¶ –£–∞“õ—ã—Ç—à–∞ –∂–∞–¥ (RAM)
users = {}  # user_id: {"ref_id": ..., "balance": 0, "referrals": []}

# üîπ START –∫–æ–º–∞–Ω–¥–∞—Å—ã
@dp.message(CommandStart())
async def start_handler(message: Message):
    user_id = message.from_user.id
    args = message.text.split()
    ref_id = args[1] if len(args) > 1 else None

    if user_id not in users:
        users[user_id] = {
            "ref_id": int(ref_id) if ref_id and ref_id.isdigit() else None,
            "balance": 0,
            "referrals": []
        }
        if ref_id and ref_id.isdigit():
            ref_user = int(ref_id)
            if ref_user in users and user_id not in users[ref_user]["referrals"]:
                users[ref_user]["referrals"].append(user_id)

    # üîò –ö–Ω–æ–ø–∫–∞–ª–∞—Ä
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üßæ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile")],
        [InlineKeyboardButton(text="üë©‚Äçüíº –ë—ñ–∑–¥—ñ“£ –ú–µ–Ω–µ–¥–∂–µ—Ä", url="https://t.me/taustars")],
        [InlineKeyboardButton(text="üí∞ –†–µ—Ñ –∞“õ—à–∞ –∞–ª—É", url="https://t.me/Meng3456")]
    ])

    await message.answer(
        "–°”ô–ª–µ–º–µ—Ç—Å—ñ–∑ –±–µ! –ë—ñ–∑ T A U Stars –¥“Ø–∫–µ–Ω—ñ."
        "–ë—ñ–∑–¥—ñ“£ –º–µ–Ω–µ–∂–µ—Ä–¥–µ–Ω –∞–ª–∞—Å—ã–∑ ‚Äî —Ç–æ–≤–∞—Ä –±”ô—Ä—ñ —Å–æ–ª –∂–µ—Ä–¥–µ.",
        reply_markup=kb
    )

# üîπ –ü—Ä–æ—Ñ–∏–ª—å –∫–Ω–æ–ø–∫–∞—Å—ã
@dp.callback_query(F.data == "profile")
async def profile_handler(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    user = users.get(user_id, {"balance": 0, "referrals": [], "ref_id": None})
    ref_link = f"https://t.me/taustars_bot?start={user_id}"

    text = (
        f"üë§ –ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã: @{callback.from_user.username or '–ê–Ω–æ–Ω–∏–º'}"
        f"üë• –†–µ—Ñ–µ—Ä–∞–ª–¥–∞—Ä —Å–∞–Ω—ã: {len(user['referrals'])}"
        f"üí∏ –¢–∞–±—ã—Å: {user['balance']} ‚Ç∏"
        f"üîó –†–µ—Ñ. —Å—ñ–ª—Ç–µ–º–µ:{ref_link}"
    )
    await callback.message.edit_text(text, reply_markup=callback.message.reply_markup)

# üîπ /money –∫–æ–º–∞–Ω–¥–∞—Å—ã (–∞“õ—à–∞ “õ–æ—Å—É)
@dp.message(Command("money"))
async def add_money(message: Message):
    if message.from_user.id != ADMIN_ID:
        return await message.answer("üö´ –°—ñ–∑–≥–µ —Ä“±“õ—Å–∞—Ç –∂–æ“õ.")

    parts = message.text.split()
    if len(parts) != 3 or not parts[1].isdigit() or not parts[2].isdigit():
        return await message.answer("‚ùó “ö–∞—Ç–µ —Ñ–æ—Ä–º–∞—Ç. –î“±—Ä—ã—Å “Ø–ª–≥—ñ: /money ID –°–ê–ù")

    user_id = int(parts[1])
    amount = int(parts[2])
    if user_id not in users:
        return await message.answer("‚ùó –ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã —Ç–∞–±—ã–ª–º–∞–¥—ã.")

    users[user_id]["balance"] += amount
    await message.answer(f"‚úÖ {user_id} –ø–∞–π–¥–∞–ª–∞–Ω—É—à—ã“ì–∞ {amount} ‚Ç∏ “õ–æ—Å—ã–ª–¥—ã.")
    try:
        await bot.send_message(user_id, f"üí∏ –°—ñ–∑–≥–µ TAU Stars —Ç–∞—Ä–∞–ø—ã–Ω–∞–Ω +{amount} ‚Ç∏ “õ–æ—Å—ã–ª–¥—ã!")
    except Exception:
        await message.answer("‚ö†Ô∏è –ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã“ì–∞ —Ö–∞–±–∞—Ä –∂—ñ–±–µ—Ä—ñ–ª–º–µ–¥—ñ.")

# üîπ /toney –∫–æ–º–∞–Ω–¥–∞—Å—ã (–∞“õ—à–∞ —à–µ–≥–µ—Ä—É)
@dp.message(Command("toney"))
async def remove_money(message: Message):
    if message.from_user.id != ADMIN_ID:
        return await message.answer("üö´ –°—ñ–∑–≥–µ —Ä“±“õ—Å–∞—Ç –∂–æ“õ.")

    parts = message.text.split()
    if len(parts) != 3 or not parts[1].isdigit() or not parts[2].isdigit():
        return await message.answer("‚ùó “ö–∞—Ç–µ —Ñ–æ—Ä–º–∞—Ç. –î“±—Ä—ã—Å “Ø–ª–≥—ñ: /toney ID –°–ê–ù")

    user_id = int(parts[1])
    amount = int(parts[2])
    if user_id not in users:
        return await message.answer("‚ùó –ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã —Ç–∞–±—ã–ª–º–∞–¥—ã.")

    users[user_id]["balance"] -= amount
    await message.answer(f"‚ûñ {user_id} –ø–∞–π–¥–∞–ª–∞–Ω—É—à—ã–¥–∞–Ω {amount} ‚Ç∏ —à–µ–≥–µ—Ä—ñ–ª–¥—ñ.")
    try:
        await bot.send_message(user_id, f"üì§ –°—ñ–∑–¥—ñ“£ —à–æ—Ç—ã“£—ã–∑–¥–∞–Ω -{amount} ‚Ç∏ —à–µ–≥–µ—Ä—ñ–ª–¥—ñ. –ê“õ—à–∞ –∞—É–¥–∞—Ä—É“ì–∞ –∂—ñ–±–µ—Ä—ñ–ª–¥—ñ.")
    except Exception:
        await message.answer("‚ö†Ô∏è –ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã“ì–∞ —Ö–∞–±–∞—Ä –∂—ñ–±–µ—Ä—ñ–ª–º–µ–¥—ñ.")

# üîπ /addreklama –∫–æ–º–∞–Ω–¥–∞—Å—ã (–∂–∞—Ä–Ω–∞–º–∞ —Ç–∞—Ä–∞—Ç—É)
@dp.message(Command("addreklama"))
async def broadcast_advert(message: Message):
    if message.from_user.id != ADMIN_ID:
        return await message.answer("üö´ –°—ñ–∑–≥–µ —Ä“±“õ—Å–∞—Ç –∂–æ“õ.")

    text = ""
    photo = None
    # –ï–≥–µ—Ä —Å—É—Ä–µ—Ç + –º”ô—Ç—ñ–Ω –±—ñ—Ä–≥–µ –∫–æ–º–∞–Ω–¥–∞–Ω—ã“£ ”©–∑—ñ–Ω–¥–µ –±–æ–ª—Å–∞
    if message.photo:
        photo = message.photo[-1].file_id
        caption = message.caption or ""
        parts = caption.split(maxsplit=1)
        text = parts[1] if len(parts) > 1 else ""
    else:
        parts = message.text.split(maxsplit=1)
        text = parts[1] if len(parts) > 1 else ""
    # –†–µ–ø–ª–∞–π–¥–∞–Ω —Å—É—Ä–µ—Ç –∞–ª—É
    if not photo and message.reply_to_message and message.reply_to_message.photo:
        photo = message.reply_to_message.photo[-1].file_id

    if not text and not photo:
        return await message.answer(
            "‚ùó –ú”ô—Ç—ñ–Ω –Ω–µ–º–µ—Å–µ —Ñ–æ—Ç–æ –∫–µ—Ä–µ–∫."
            "“ö–æ–ª–¥–∞–Ω—É:"
            "/addreklama <–º”ô—Ç—ñ–Ω> (caption —Ä–µ—Ç—ñ–Ω–¥–µ —Ñ–æ—Ç–æ + –º”ô—Ç—ñ–Ω)"
            "–Ω–µ–º–µ—Å–µ —Ä–µ–ø–ª–∞–π–¥–∞ —Å—É—Ä–µ—Ç–ø–µ–Ω `/addreklama`"
        )

    sent = 0
    for uid in users.keys():
        try:
            if photo:
                await bot.send_photo(chat_id=uid, photo=photo, caption=text or "")
            else:
                await bot.send_message(chat_id=uid, text=text)
            sent += 1
        except Exception:
            continue

    await message.answer(f"‚úÖ –ñ–∞—Ä–Ω–∞–º–∞ {sent} –ø–∞–π–¥–∞–ª–∞–Ω—É—à—ã“ì–∞ –∂—ñ–±–µ—Ä—ñ–ª–¥—ñ.")

# üîπ –Ü—Å–∫–µ “õ–æ—Å—É
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
